LeetCode-234-Palindrome Linked List
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode getMid(ListNode head){
        if(head==null || head.next == null){
            return head;
        }
        ListNode pre = null;
        ListNode slow = head;
        ListNode fast = head;
        while(fast!=null&&fast.next!=null){
            pre = slow;
            slow = slow.next;
            fast = fast.next.next;   
        }
        pre.next = null;
        return slow;
    }
    
    public ListNode reverse(ListNode head){
    
        ListNode pre = null;
        ListNode cur = null;
        while(head!=null){
            cur = head.next;
            head.next = pre;
            pre = head;
            head = cur;
        }
        
        return pre;
    }
    public boolean isPalindrome(ListNode head) {
        if(head==null||head.next==null){
            return true;
        }
        ListNode mid = getMid(head);
        mid = reverse(mid);
        while(head!=null&&mid!=null){
            if(head.val!=mid.val){
                return false;
            }
            head = head.next;
            mid =mid.next;
        }
        return true;
    }
}