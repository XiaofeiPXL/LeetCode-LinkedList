Leetcode-143-Reorder List
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode findMID(ListNode head)
   {
        if(head==null||head.next ==null){
            return head;
        }
        ListNode slow = head;
        ListNode fast = head;
        
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
    
    public ListNode reverse(ListNode head)
    {
        ListNode pre = null;
        ListNode cur = null;
        
        while(head!=null)
        {
             cur = head.next;
             head.next=pre;
             pre = head;
             head = cur;
        }
        return pre;
    }
    public void reorderList(ListNode head) 
    {  
        if(head==null)
        {
            return;
        } 
        ListNode mid = findMID(head);
        ListNode l2 = mid.next;
        mid.next = null;
        l2 = reverse(l2);
        ListNode l1 = head;
        while(l1!=null&&l2!=null){
            ListNode next = l1.next;
            l1.next = l2;
            l2 = l2.next;
            l1.next.next = next;
            l1 = next;
        }   
    }
}