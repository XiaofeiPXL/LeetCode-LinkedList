LeetCode-144-Binary Tree Preorder Traversal
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution 
{
    public void helper(TreeNode root,List<Integer> result ){
        if(root==null){
            return;
        }
        result.add(root.val);
        helper(root.left,result);
        helper(root.right,result);
    }
    public List<Integer> preorderTraversal(TreeNode root) {
        ArrayList<Integer> result = new ArrayList<Integer>();
        if(root==null){
            return result;
        }
        helper(root,result);
        return result;
    }
}

class Solution 
{
    public List<Integer> preorderTraversal(TreeNode root) 
    {
        ArrayList<Integer> result = new ArrayList<Integer>();
        Stack<TreeNode> stack = new Stack<TreeNode>();
        
        while(root!=null || !stack.isEmpty())
        {
            while(root!=null){
                result.add(root.val);
                stack.push(root);
                root = root.left;
            }
            if(!stack.isEmpty()){
                root = stack.pop();
                root = root.right;
            }
        }
        
        return result;
    }
}