LeetCode-94-Binary Tree Inorder Traversal
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution 
{
    public void helper(TreeNode root, ArrayList<Integer> res){
        if(root == null){
            return;
        }
        helper(root.left,res);
        res.add(root.val);
        helper(root.right,res);      
    }
    public List<Integer> inorderTraversal(TreeNode root) {
        ArrayList<Integer> res = new ArrayList<Integer>();
        if(root==null){
            return res;
        }
        helper(root,res);
        return res;
    }
}

class Solution 
{
    public List<Integer> inorderTraversal(TreeNode root) {
        ArrayList<Integer> res = new ArrayList<Integer>();
        Stack<TreeNode> stack = new Stack<TreeNode>();
        while(root!=null || !stack.isEmpty()){
            while(root!=null){
                stack.push(root);
                root = root.left;
            }
            
            if(!stack.isEmpty()){
                 root = stack.pop();
                 res.add(root.val);
                 root = root.right;
            }
        }
        
        return res;
    }
}