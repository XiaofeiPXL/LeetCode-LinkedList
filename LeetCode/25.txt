LeetCode-25-Reverse Nodes in k-Group
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverse(ListNode pre, ListNode next)
    {
        ListNode last = pre.next;
        ListNode cur = last.next;
        while(cur!=next){
            last.next = cur.next;
            cur.next = pre.next;
            pre.next = cur;
            cur = last.next;
        }
        return last;
    }
    
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head==null ||  k==1){
            return head;
        }
        
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode pre = dummy;
        ListNode cur = head;
        int count = 0;
        while(cur!=null)
        {
            count++;
            ListNode next = cur.next;
            if(count==k){
                pre = reverse(pre,next);
                count = 0;
            }
            cur = next;
        }
        return dummy.next;
    }
}